apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: api-uploads-pvc
  namespace: financial-analyzer
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api
  namespace: financial-analyzer
  labels:
    app: api
spec:
  replicas: 2
  selector:
    matchLabels:
      app: api
  template:
    metadata:
      labels:
        app: api
    spec:
      initContainers:
      - name: wait-for-postgres
        image: postgres:15-alpine
        command:
        - sh
        - -c
        - |
          until pg_isready -h $DATABASE_HOST -p $DATABASE_PORT -U $DATABASE_USER; do
            echo "Waiting for postgres..."
            sleep 2
          done
        env:
        - name: DATABASE_HOST
          valueFrom:
            configMapKeyRef:
              name: financial-analyzer-config
              key: DATABASE_HOST
        - name: DATABASE_PORT
          valueFrom:
            configMapKeyRef:
              name: financial-analyzer-config
              key: DATABASE_PORT
        - name: DATABASE_USER
          valueFrom:
            configMapKeyRef:
              name: financial-analyzer-config
              key: DATABASE_USER
      containers:
      - name: api
        image: financial-analyzer/api:latest
        ports:
        - containerPort: 3001
        env:
        - name: NODE_ENV
          valueFrom:
            configMapKeyRef:
              name: financial-analyzer-config
              key: NODE_ENV
        - name: API_PORT
          valueFrom:
            configMapKeyRef:
              name: financial-analyzer-config
              key: API_PORT
        - name: DATABASE_URL
          value: "postgresql://$(DATABASE_USER):$(DATABASE_PASSWORD)@$(DATABASE_HOST):$(DATABASE_PORT)/$(DATABASE_NAME)"
        - name: DATABASE_USER
          valueFrom:
            configMapKeyRef:
              name: financial-analyzer-config
              key: DATABASE_USER
        - name: DATABASE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: financial-analyzer-secrets
              key: DATABASE_PASSWORD
        - name: DATABASE_HOST
          valueFrom:
            configMapKeyRef:
              name: financial-analyzer-config
              key: DATABASE_HOST
        - name: DATABASE_PORT
          valueFrom:
            configMapKeyRef:
              name: financial-analyzer-config
              key: DATABASE_PORT
        - name: DATABASE_NAME
          valueFrom:
            configMapKeyRef:
              name: financial-analyzer-config
              key: DATABASE_NAME
        - name: REDIS_URL
          value: "redis://:$(REDIS_PASSWORD)@$(REDIS_HOST):$(REDIS_PORT)"
        - name: REDIS_HOST
          valueFrom:
            configMapKeyRef:
              name: financial-analyzer-config
              key: REDIS_HOST
        - name: REDIS_PORT
          valueFrom:
            configMapKeyRef:
              name: financial-analyzer-config
              key: REDIS_PORT
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: financial-analyzer-secrets
              key: REDIS_PASSWORD
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: financial-analyzer-secrets
              key: JWT_SECRET
        - name: ANTHROPIC_API_KEY
          valueFrom:
            secretKeyRef:
              name: financial-analyzer-secrets
              key: ANTHROPIC_API_KEY
        envFrom:
        - configMapRef:
            name: financial-analyzer-config
        volumeMounts:
        - name: uploads-storage
          mountPath: /app/uploads
        livenessProbe:
          httpGet:
            path: /api/health
            port: 3001
          initialDelaySeconds: 60
          periodSeconds: 30
        readinessProbe:
          httpGet:
            path: /api/health
            port: 3001
          initialDelaySeconds: 10
          periodSeconds: 10
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
      volumes:
      - name: uploads-storage
        persistentVolumeClaim:
          claimName: api-uploads-pvc

---
apiVersion: v1
kind: Service
metadata:
  name: api-service
  namespace: financial-analyzer
  labels:
    app: api
spec:
  ports:
  - port: 3001
    targetPort: 3001
  selector:
    app: api

---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: api-hpa
  namespace: financial-analyzer
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: api
  minReplicas: 2
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80